/*
1. Select all the information from the doctor table.

Each doctor has an id, first and last name as well as their age.
*/

SELECT 
    id,
    first_name,
    last_name,
    age
FROM doctor


/*
2. Select all the information from the procedure table.

Each procedure contains the following information: id, procedure_date, doctor_id, patient_id (we are not going to work with the patient table to make things easier, but the column is still there for completeness), category (like: dermal procedure, gastrointestinal procedure...), name, price and score. The last column is a number from 0 to 100 which comes from procedure evaluation by another colleague at the clinic.
*/

SELECT 
	id,
    procedure_date,
    doctor_id,
    patient_id,
    category,
    name,
    price,
    score
FROM procedure


/*
3. For each doctor, show first_name, last_name, age and the average age of all doctors.
*/

SELECT 
	first_name, 
    last_name, 
    age,
    AVG(age) OVER()
FROM doctor


/*
4. For each procedure, show its id, category, price and the total sum of prices from all procedures in the same category.
*/

SELECT 
    id,
    category,
    price,
    SUM(price) OVER(PARTITION BY category)
FROM procedure


/*
5. For each procedure, show its name, the first and last name of the doctor, the score and the rank of the procedure in its category based on its score. The best procedure should get rank = 1. Allow multiple procedures with the same rank and gaps in numbering.
*/

SELECT 
	P.name,
    d.first_name,
    d.last_name,
    p.score,
    RANK() OVER(PARTITION BY category ORDER BY p.score DESC)
FROM procedure p JOIN doctor d
	ON p.doctor_id = d.id


/*
6. For the third most expensive procedure ever, show the following information: doctor_id, name, procedure_date and price.
*/

WITH most_expensive_procedure AS
(
	SELECT 
      doctor_id,
      name,
      procedure_date,
  	  price,
      DENSE_RANK() OVER(ORDER BY price DESC) AS rank
	FROM procedure
)

SELECT 
      doctor_id,
      name,
      procedure_date,
  	  price    
FROM most_expensive_procedure
WHERE rank = 3


/*
7. For each procedure, show the following information: procedure_date, doctor_id, category, name, score and the average score from the procedures in the same category which are included in the following window frame: two previous rows, current row, three following rows in terms of the procedure date
*/

SELECT 
	procedure_date,
    doctor_id,
    category,
    name,
    score,
    AVG(score) OVER(
      	PARTITION BY category
    	ORDER BY procedure_date
    	ROWS between 2 PRECEDING and 3 FOLLOWING)
FROM procedure



/*
8. For each procedure, show the following information: procedure_date, category, doctor_id, patient_id, name, price and
the total sum of prices from all procedures from the first day until the end of the current day.
*/

SELECT 
	procedure_date,
    category,
    doctor_id,
    patient_id,
    name,
    price,
    SUM(price) OVER(ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
FROM procedure


/*
9. 
*/



/*
10. 
*/



