/*
1. Select all the information from table game.

Each game has an id and a name and is runnable on a specific platform. It is characterized by a specific genre, has an editor_rating and size in MB. The column released specifies when the game was released, whereas updated â€“ when the game was last updated.
*/

SELECT id,	name,	platform,	genre,	editor_rating,	size,	released,	updated
FROM game


/*
2. Select all the information from the purchase table.

Each purchase of a game is stored in this table. The purchase has its own id, the id of the game, the price paid and the date of purchase.
*/

SELECT id,	game_id,	price,	date
FROM purchase 



/*
3. For each game, show name, genre, date of update and its rank. The rank should be created with RANK() and take into account the date of update.
*/
SELECT name, genre, updated, RANK() OVER(ORDER BY updated)
FROM game

SELECT
  name,
  platform,
  editor_rating,
  DENSE_RANK() OVER(ORDER BY editor_rating)
FROM game;

/*
4. Use DENSE_RANK() and for each game, show name, size and the rank in terms of its size.
*/

SELECT
  name,
  size,
  DENSE_RANK() OVER(ORDER BY size)
FROM game;

SELECT
  name,
  platform,
  editor_rating,
  ROW_NUMBER() OVER(ORDER BY editor_rating)
FROM game;

/*
5. Use ROW_NUMBER() and for each game, show their name, date of release and the rank based on the date of release.
*/

SELECT
  name,
  released,
  ROW_NUMBER() OVER(ORDER BY released)
FROM game;

/*
6. 
*/
